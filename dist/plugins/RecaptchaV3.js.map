{"version":3,"file":"RecaptchaV3.js","sources":["../../src/plugins/RecaptchaV3.ts"],"sourcesContent":["export default class RecaptchaV3 {\n  public static g        = window.grecaptcha;\n\n  private static _name   ='RecaptchaV3';\n  private static _ready  = false;\n  private static _class  = undefined;\n  private static _loaded = false;\n  private static _queue  = [];\n\n  private static _runQueue() {\n    for (const form of RecaptchaV3._queue) {\n      RecaptchaV3._generateTokens(form);\n    }\n  };\n  private static _onReady(cb) {\n    RecaptchaV3.g.ready(() => {\n      RecaptchaV3._ready = true;\n      cb();\n    });\n  };\n\n  private static _execute(form) {\n    RecaptchaV3.g.execute(RecaptchaV3._class.config['recaptcha_site'], { action: form.config.recaptcha_action })\n    .then(token => {\n      form.plugins.config[RecaptchaV3._name].input.value = token;\n      form.unlockBtns();\n    });\n  };\n\n  private static _generateTokens(form) {\n    if (RecaptchaV3._ready) {\n      RecaptchaV3._execute(form);\n    } else {\n      RecaptchaV3._onReady(() => RecaptchaV3._execute(form));\n    }\n  };\n\n  public static init(form) {\n    if (! RecaptchaV3._class) {\n      RecaptchaV3._class = form.constructor;\n    }\n\n    if (RecaptchaV3._class.numbers === 0) {\n      if (! RecaptchaV3.g) {\n        const lib = document.createElement('script');\n        lib.src = 'https://www.google.com/recaptcha/api.js?render=' + RecaptchaV3._class.config['recaptcha_site'];\n        document.head.append(lib);\n        lib.onload = () => {\n          RecaptchaV3.g = (window as any).grecaptcha;\n          RecaptchaV3._loaded = true;\n          RecaptchaV3._runQueue();\n          RecaptchaV3._queue = [];\n        }\n      } else {\n        RecaptchaV3.g = (window as any).grecaptcha;\n        RecaptchaV3._loaded = true;\n      }\n    }\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'hidden');\n    input.setAttribute('name', 'g-recaptcha-response');\n    input.setAttribute('id', 'g-recaptcha-' + RecaptchaV3._class.numbers);\n    form.plugins.config[RecaptchaV3._name] = {\n      input,\n    }\n    form.config.el.append(input);\n\n    if (RecaptchaV3._loaded) {\n      RecaptchaV3._generateTokens(form);\n    } else {\n      RecaptchaV3._queue.push(form);\n    }\n  };\n\n  public static afterSubmit(form, success, errors, side) {\n    if (side === 'client') {\n      return;\n    }\n\n    RecaptchaV3._generateTokens(form);\n  }\n}"],"names":["RecaptchaV3","[object Object]","form","_queue","_generateTokens","cb","g","ready","_ready","execute","_class","config","action","recaptcha_action","then","token","plugins","_name","input","value","unlockBtns","_execute","_onReady","constructor","numbers","window","grecaptcha","_loaded","lib","document","createElement","src","head","append","onload","_runQueue","setAttribute","el","push","success","errors","side","undefined"],"mappings":"MAAqBA;EASXC;IACN,KAAK,MAAMC,QAAQF,YAAYG,QAC7BH,YAAYI,gBAAgBF;;EAGxBD,gBAAgBI;IACtBL,YAAYM,EAAEC,OAAM;MAClBP,YAAYQ,UAAS,GACrBH;;;EAIIJ,gBAAgBC;IACtBF,YAAYM,EAAEG,QAAQT,YAAYU,OAAOC,OAAuB,gBAAG;MAAEC,QAAQV,KAAKS,OAAOE;OACxFC,MAAKC;MACJb,KAAKc,QAAQL,OAAOX,YAAYiB,OAAOC,MAAMC,QAAQJ,OACrDb,KAAKkB;;;EAIDnB,uBAAuBC;IACzBF,YAAYQ,SACdR,YAAYqB,SAASnB,QAErBF,YAAYsB,UAAS,MAAMtB,YAAYqB,SAASnB;;EAI7CD,YAAYC;IAKjB,IAJMF,YAAYU,WAChBV,YAAYU,SAASR,KAAKqB,cAGO,MAA/BvB,YAAYU,OAAOc,SACrB,IAAMxB,YAAYM,GAWhBN,YAAYM,IAAKmB,OAAeC;IAChC1B,YAAY2B,WAAU,QAZH;MACnB,MAAMC,MAAMC,SAASC,cAAc;MACnCF,IAAIG,MAAM,oDAAoD/B,YAAYU,OAAOC,OAAuB;MACxGkB,SAASG,KAAKC,OAAOL,MACrBA,IAAIM,SAAS;QACXlC,YAAYM,IAAKmB,OAAeC,YAChC1B,YAAY2B,WAAU,GACtB3B,YAAYmC;QACZnC,YAAYG,SAAS;;;IAQ3B,MAAMe,QAAQW,SAASC,cAAc;IACrCZ,MAAMkB,aAAa,QAAQ,WAC3BlB,MAAMkB,aAAa,QAAQ;IAC3BlB,MAAMkB,aAAa,MAAM,iBAAiBpC,YAAYU,OAAOc,UAC7DtB,KAAKc,QAAQL,OAAOX,YAAYiB,SAAS;MACvCC,OAAAA;OAEFhB,KAAKS,OAAO0B,GAAGJ,OAAOf,QAElBlB,YAAY2B,UACd3B,YAAYI,gBAAgBF,QAE5BF,YAAYG,OAAOmC,KAAKpC;;EAIrBD,mBAAmBC,MAAMqC,SAASC,QAAQC;IAClC,aAATA,QAIJzC,YAAYI,gBAAgBF;;;;AA/EhBF,gBAAWyB,OAAOC,YAEjB1B,oBAAS,eACTA,sBAAU;AACVA,0BAAU0C,GACV1C,uBAAU,GACVA,qBAAU;;"}