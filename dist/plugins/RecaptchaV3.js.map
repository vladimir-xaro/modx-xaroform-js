{"version":3,"file":"RecaptchaV3.js","sources":["../../src/plugins/RecaptchaV3.ts"],"sourcesContent":["export default {\n  g: (window as any).grecaptcha,\n  _name: 'RecaptchaV3',\n  _ready: false,\n  _class: undefined,\n  _loaded: false,\n  _queue: [],\n  _runQueue() {\n    for (const form of this._queue) {\n      this._generateTokens(form);\n    }\n  },\n  _onReady(cb) {\n    this.g.ready(() => {\n      this._ready = true;\n      cb();\n    });\n  },\n  _execute(form) {\n    this.g.execute(this._class.config['recaptcha_site'], { action: form.config.recaptcha_action })\n    .then(token => {\n      form.plugins.config[this._name].input.value = token;\n      form.unlockBtns();\n    });\n  },\n  _generateTokens(form) {\n    if (this._ready) {\n      this._execute(form);\n    } else {\n      this._onReady(() => this._execute(form));\n    }\n  },\n  init(form) {\n    if (! this._class) {\n      this._class = form.constructor;\n    }\n\n    if (this._class.numbers === 0) {\n      if (! this.g) {\n        const lib = document.createElement('script');\n        lib.src = 'https://www.google.com/recaptcha/api.js?render=' + this._class.config['recaptcha_site'];\n        document.head.append(lib);\n        lib.onload = () => {\n          this.g = (window as any).grecaptcha;\n          this._loaded = true;\n          this._runQueue();\n          this._queue = [];\n        }\n      } else {\n        this.g = (window as any).grecaptcha;\n        this._loaded = true;\n      }\n    }\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'hidden');\n    input.setAttribute('name', 'g-recaptcha-response');\n    input.setAttribute('id', 'g-recaptcha-' + this._class.numbers);\n    form.plugins.config[this._name] = {\n      input,\n    }\n    form.config.el.append(input);\n\n    if (this._loaded) {\n      this._generateTokens(form);\n    } else {\n      this._queue.push(form);\n    }\n  },\n  afterSubmit(form, success, errors, side) {\n    if (side === 'client') {\n      return;\n    }\n\n    this._generateTokens(form);\n  }\n};"],"names":["g","window","grecaptcha","_name","_ready","_class","undefined","_loaded","_queue","[object Object]","form","this","_generateTokens","cb","ready","execute","config","action","recaptcha_action","then","token","plugins","input","value","unlockBtns","_execute","_onReady","constructor","numbers","lib","document","createElement","src","head","append","onload","_runQueue","setAttribute","el","push","success","errors","side"],"mappings":"AAAA,kBAAe;EACbA,GAAIC,OAAeC;EACnBC,OAAO;EACPC,SAAQ;EACRC,aAAQC;EACRC,UAAS;EACTC,QAAQ;EACRC;IACE,KAAK,MAAMC,QAAQC,KAAKH,QACtBG,KAAKC,gBAAgBF;;EAGzBD,SAASI;IACPF,KAAKX,EAAEc,OAAM;MACXH,KAAKP,UAAS,GACdS;;;EAGJJ,SAASC;IACPC,KAAKX,EAAEe,QAAQJ,KAAKN,OAAOW,OAAuB,gBAAG;MAAEC,QAAQP,KAAKM,OAAOE;OAC1EC,MAAKC;MACJV,KAAKW,QAAQL,OAAOL,KAAKR,OAAOmB,MAAMC,QAAQH,OAC9CV,KAAKc;;;EAGTf,gBAAgBC;IACVC,KAAKP,SACPO,KAAKc,SAASf,QAEdC,KAAKe,UAAS,MAAMf,KAAKc,SAASf;;EAGtCD,KAAKC;IAKH,IAJMC,KAAKN,WACTM,KAAKN,SAASK,KAAKiB,cAGO,MAAxBhB,KAAKN,OAAOuB,SACd,IAAMjB,KAAKX,GAWTW,KAAKX,IAAKC,OAAeC;IACzBS,KAAKJ,WAAU,QAZH;MACZ,MAAMsB,MAAMC,SAASC,cAAc;MACnCF,IAAIG,MAAM,oDAAoDrB,KAAKN,OAAOW,OAAuB;MACjGc,SAASG,KAAKC,OAAOL,MACrBA,IAAIM,SAAS;QACXxB,KAAKX,IAAKC,OAAeC,YACzBS,KAAKJ,WAAU,GACfI,KAAKyB,aACLzB,KAAKH,SAAS;;;IAQpB,MAAMc,QAAQQ,SAASC,cAAc;IACrCT,MAAMe,aAAa,QAAQ,WAC3Bf,MAAMe,aAAa,QAAQ;IAC3Bf,MAAMe,aAAa,MAAM,iBAAiB1B,KAAKN,OAAOuB,UACtDlB,KAAKW,QAAQL,OAAOL,KAAKR,SAAS;MAChCmB,OAAAA;OAEFZ,KAAKM,OAAOsB,GAAGJ,OAAOZ,QAElBX,KAAKJ,UACPI,KAAKC,gBAAgBF,QAErBC,KAAKH,OAAO+B,KAAK7B;;EAGrBD,YAAYC,MAAM8B,SAASC,QAAQC;IACpB,aAATA,QAIJ/B,KAAKC,gBAAgBF;;;;"}