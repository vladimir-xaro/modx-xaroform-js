{"version":3,"file":"RecaptchaV3.js","sources":["../../src/plugins/RecaptchaV3.ts"],"sourcesContent":["export default class RecaptchaV3 {\n  public g        = grecaptcha;\n\n  private _name   ='RecaptchaV3';\n  private _ready  = false;\n  private _class  = undefined;\n  private _loaded = false;\n  private _queue  = [];\n\n  private _runQueue() {\n    for (const form of this._queue) {\n      this._generateTokens(form);\n    }\n  };\n  private _onReady(cb) {\n    this.g.ready(() => {\n      this._ready = true;\n      cb();\n    });\n  };\n\n  private _execute(form) {\n    this.g.execute(this._class.config['recaptcha_site'], { action: form.config.recaptcha_action })\n    .then(token => {\n      form.plugins.config[this._name].input.value = token;\n      form.unlockBtns();\n    });\n  };\n\n  private _generateTokens(form) {\n    if (this._ready) {\n      this._execute(form);\n    } else {\n      this._onReady(() => this._execute(form));\n    }\n  };\n\n  public init(form) {\n    if (! this._class) {\n      this._class = form.constructor;\n    }\n\n    if (this._class.numbers === 0) {\n      if (! this.g) {\n        const lib = document.createElement('script');\n        lib.src = 'https://www.google.com/recaptcha/api.js?render=' + this._class.config['recaptcha_site'];\n        document.head.append(lib);\n        lib.onload = () => {\n          this.g = (window as any).grecaptcha;\n          this._loaded = true;\n          this._runQueue();\n          this._queue = [];\n        }\n      } else {\n        this.g = (window as any).grecaptcha;\n        this._loaded = true;\n      }\n    }\n\n    const input = document.createElement('input');\n    input.setAttribute('type', 'hidden');\n    input.setAttribute('name', 'g-recaptcha-response');\n    input.setAttribute('id', 'g-recaptcha-' + this._class.numbers);\n    form.plugins.config[this._name] = {\n      input,\n    }\n    form.config.el.append(input);\n\n    if (this._loaded) {\n      this._generateTokens(form);\n    } else {\n      this._queue.push(form);\n    }\n  };\n\n  public afterSubmit(form, success, errors, side) {\n    if (side === 'client') {\n      return;\n    }\n\n    this._generateTokens(form);\n  }\n}"],"names":["[object Object]","this","grecaptcha","undefined","form","_queue","_generateTokens","cb","g","ready","_ready","execute","_class","config","action","recaptcha_action","then","token","plugins","_name","input","value","unlockBtns","_execute","_onReady","constructor","numbers","window","_loaded","lib","document","createElement","src","head","append","onload","_runQueue","setAttribute","el","push","success","errors","side"],"mappings":";EAAAA;IACSC,SAAWC,YAEVD,aAAS,eACTA,eAAU,GACVA,mBAAUE;IACVF,gBAAU,GACVA,cAAU;;EAEVD;IACN,KAAK,MAAMI,QAAQH,KAAKI,QACtBJ,KAAKK,gBAAgBF;;EAGjBJ,SAASO;IACfN,KAAKO,EAAEC,OAAM;MACXR,KAAKS,UAAS,GACdH;;;EAIIP,SAASI;IACfH,KAAKO,EAAEG,QAAQV,KAAKW,OAAOC,OAAuB,gBAAG;MAAEC,QAAQV,KAAKS,OAAOE;OAC1EC,MAAKC;MACJb,KAAKc,QAAQL,OAAOZ,KAAKkB,OAAOC,MAAMC,QAAQJ,OAC9Cb,KAAKkB;;;EAIDtB,gBAAgBI;IAClBH,KAAKS,SACPT,KAAKsB,SAASnB,QAEdH,KAAKuB,UAAS,MAAMvB,KAAKsB,SAASnB;;EAI/BJ,KAAKI;IAKV,IAJMH,KAAKW,WACTX,KAAKW,SAASR,KAAKqB,cAGO,MAAxBxB,KAAKW,OAAOc,SACd,IAAMzB,KAAKO,GAWTP,KAAKO,IAAKmB,OAAezB;IACzBD,KAAK2B,WAAU,QAZH;MACZ,MAAMC,MAAMC,SAASC,cAAc;MACnCF,IAAIG,MAAM,oDAAoD/B,KAAKW,OAAOC,OAAuB;MACjGiB,SAASG,KAAKC,OAAOL,MACrBA,IAAIM,SAAS;QACXlC,KAAKO,IAAKmB,OAAezB,YACzBD,KAAK2B,WAAU,GACf3B,KAAKmC,aACLnC,KAAKI,SAAS;;;IAQpB,MAAMe,QAAQU,SAASC,cAAc;IACrCX,MAAMiB,aAAa,QAAQ,WAC3BjB,MAAMiB,aAAa,QAAQ;IAC3BjB,MAAMiB,aAAa,MAAM,iBAAiBpC,KAAKW,OAAOc,UACtDtB,KAAKc,QAAQL,OAAOZ,KAAKkB,SAAS;MAChCC,OAAAA;OAEFhB,KAAKS,OAAOyB,GAAGJ,OAAOd,QAElBnB,KAAK2B,UACP3B,KAAKK,gBAAgBF,QAErBH,KAAKI,OAAOkC,KAAKnC;;EAIdJ,YAAYI,MAAMoC,SAASC,QAAQC;IAC3B,aAATA,QAIJzC,KAAKK,gBAAgBF"}